// <auto-generated />
using System;
using CarInsuranceManage.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarInsuranceManage.Migrations
{
    [DbContext(typeof(CarInsuranceDbContext))]
    [Migration("20241222120622_CarinsuranceDB")]
    partial class CarinsuranceDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CarInsuranceManage.Models.Claim", b =>
                {
                    b.Property<int>("claim_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("claim_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("customer_email")
                        .HasColumnType("longtext");

                    b.Property<string>("customer_full_name")
                        .HasColumnType("longtext");

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("customer_phone")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("claim_id");

                    b.HasIndex("customer_id");

                    b.ToTable("claims");

                    b.HasData(
                        new
                        {
                            claim_id = 1,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(240),
                            customer_email = "admin@example.com",
                            customer_full_name = "Admin User",
                            customer_id = 1,
                            customer_phone = "1234567890",
                            description = "Claim for accident",
                            status = 0
                        },
                        new
                        {
                            claim_id = 2,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(244),
                            customer_email = "user1@example.com",
                            customer_full_name = "User One",
                            customer_id = 2,
                            customer_phone = "1234567891",
                            description = "Claim for windshield damage",
                            status = 2
                        },
                        new
                        {
                            claim_id = 3,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(246),
                            customer_email = "user2@example.com",
                            customer_full_name = "User Two",
                            customer_id = 3,
                            customer_phone = "1234567892",
                            description = "Claim for theft",
                            status = 1
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Comment", b =>
                {
                    b.Property<int>("comment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("comment_id"));

                    b.Property<string>("comment_text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int?>("parent_comment_id")
                        .HasColumnType("int");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("comment_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("parent_comment_id");

                    b.ToTable("comments");

                    b.HasData(
                        new
                        {
                            comment_id = 1,
                            comment_text = "Great service!",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(405),
                            customer_id = 1,
                            rating = 5,
                            status = "Active"
                        },
                        new
                        {
                            comment_id = 2,
                            comment_text = "I agree, excellent support.",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(409),
                            customer_id = 2,
                            parent_comment_id = 1,
                            rating = 4,
                            status = "Active"
                        },
                        new
                        {
                            comment_id = 3,
                            comment_text = "Service was okay.",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(411),
                            customer_id = 3,
                            rating = 3,
                            status = "Active"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Contact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_added")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("date_modified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            customer_id = 1,
                            date_added = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(350),
                            date_modified = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(350),
                            email = "admin@example.com",
                            full_name = "Admin User",
                            message = "Can I upgrade my policy?",
                            phone = "1234567890",
                            status = true,
                            subject = "Policy Details"
                        },
                        new
                        {
                            id = 2,
                            customer_id = 2,
                            date_added = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(355),
                            date_modified = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(355),
                            email = "user1@example.com",
                            full_name = "User One",
                            message = "I need help with my claim.",
                            phone = "1234567891",
                            status = true,
                            subject = "Claim Issue"
                        },
                        new
                        {
                            id = 3,
                            customer_id = 3,
                            date_added = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(357),
                            date_modified = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(357),
                            email = "user2@example.com",
                            full_name = "User Two",
                            message = "I have a question about your services.",
                            phone = "1234567892",
                            status = false,
                            subject = "General Inquiry"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("customer_id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("customer_id");

                    b.HasIndex("user_id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            customer_id = 1,
                            address = "123 Admin Street",
                            full_name = "Admin User",
                            phone_number = "1234567890",
                            user_id = 1
                        },
                        new
                        {
                            customer_id = 2,
                            address = "123 User Street",
                            full_name = "User One",
                            phone_number = "1234567891",
                            user_id = 2
                        },
                        new
                        {
                            customer_id = 3,
                            address = "123 Another Street",
                            full_name = "User Two",
                            phone_number = "1234567892",
                            user_id = 3
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.CustomerSupportRequest", b =>
                {
                    b.Property<int>("support_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("support_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("resolved_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("resolved_by")
                        .HasColumnType("int");

                    b.Property<string>("support_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("support_payment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("support_status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("support_type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("support_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("resolved_by");

                    b.ToTable("customer_support_requests");

                    b.HasData(
                        new
                        {
                            support_id = 1,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(271),
                            customer_id = 1,
                            support_description = "Help with insurance details.",
                            support_payment = "Free",
                            support_status = "Pending",
                            support_type = "General Inquiry"
                        },
                        new
                        {
                            support_id = 2,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(271),
                            customer_id = 2,
                            resolved_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(273),
                            resolved_by = 1,
                            support_description = "Issue with a claim.",
                            support_payment = "Paid",
                            support_status = "Resolved",
                            support_type = "Claim Support"
                        },
                        new
                        {
                            support_id = 3,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(275),
                            customer_id = 3,
                            support_description = "Renewal question.",
                            support_payment = "Free",
                            support_status = "Closed",
                            support_type = "Policy Inquiry"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.History", b =>
                {
                    b.Property<int>("history_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("history_id"));

                    b.Property<string>("car_brand")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("frame_number")
                        .HasColumnType("longtext");

                    b.Property<string>("insurance_code")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("insurance_end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("insurance_package")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("insurance_price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("insurance_start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("machine_number")
                        .HasColumnType("longtext");

                    b.Property<string>("number_plate")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("registration_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.Property<string>("vehicle_line")
                        .HasColumnType("longtext");

                    b.Property<string>("year_of_manufacture")
                        .HasColumnType("longtext");

                    b.HasKey("history_id");

                    b.HasIndex("customer_id");

                    b.ToTable("histories");

                    b.HasData(
                        new
                        {
                            history_id = 1,
                            car_brand = "Toyota",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(438),
                            customer_id = 1,
                            email = "admin@example.com",
                            frame_number = "FRAME001",
                            insurance_code = "INS001",
                            insurance_end_date = new DateTime(2025, 6, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(436),
                            insurance_package = "Basic Plan",
                            insurance_price = 500.00m,
                            insurance_start_date = new DateTime(2024, 6, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(435),
                            machine_number = "MACHINE001",
                            number_plate = "ABC123",
                            phone = "1234567890",
                            registration_date = new DateTime(2024, 6, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(432),
                            username = "admin",
                            vehicle_line = "Corolla",
                            year_of_manufacture = "2020"
                        },
                        new
                        {
                            history_id = 2,
                            car_brand = "Honda",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(444),
                            customer_id = 2,
                            email = "user1@example.com",
                            frame_number = "FRAME002",
                            insurance_code = "INS002",
                            insurance_end_date = new DateTime(2024, 6, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(443),
                            insurance_package = "Comprehensive Plan",
                            insurance_price = 700.00m,
                            insurance_start_date = new DateTime(2023, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(442),
                            machine_number = "MACHINE002",
                            number_plate = "XYZ456",
                            phone = "1234567891",
                            registration_date = new DateTime(2023, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(441),
                            username = "user1",
                            vehicle_line = "Civic",
                            year_of_manufacture = "2019"
                        },
                        new
                        {
                            history_id = 3,
                            car_brand = "Ford",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(450),
                            customer_id = 3,
                            email = "user2@example.com",
                            frame_number = "FRAME003",
                            insurance_code = "INS003",
                            insurance_end_date = new DateTime(2025, 9, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(449),
                            insurance_package = "Premium Plan",
                            insurance_price = 900.00m,
                            insurance_start_date = new DateTime(2024, 9, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(448),
                            machine_number = "MACHINE003",
                            number_plate = "DEF789",
                            phone = "1234567892",
                            registration_date = new DateTime(2024, 9, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(447),
                            username = "user2",
                            vehicle_line = "Focus",
                            year_of_manufacture = "2021"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.InsuranceInfo", b =>
                {
                    b.Property<int>("insurance_info_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("insurance_info_id"));

                    b.Property<string>("car_brand")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("frame_number")
                        .HasColumnType("longtext");

                    b.Property<string>("insurance_code")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("insurance_end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("insurance_package")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("insurance_price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("insurance_start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("machine_number")
                        .HasColumnType("longtext");

                    b.Property<string>("number_plate")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("registration_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.Property<string>("vehicle_line")
                        .HasColumnType("longtext");

                    b.Property<string>("year_of_manufacture")
                        .HasColumnType("longtext");

                    b.HasKey("insurance_info_id");

                    b.HasIndex("customer_id");

                    b.ToTable("insurances_info");

                    b.HasData(
                        new
                        {
                            insurance_info_id = 1,
                            car_brand = "Toyota",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(472),
                            customer_id = 1,
                            email = "admin@example.com",
                            frame_number = "FRAME001",
                            insurance_end_date = new DateTime(2025, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(470),
                            insurance_package = "Basic Plan",
                            insurance_price = 500.00m,
                            insurance_start_date = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(470),
                            machine_number = "MACHINE001",
                            number_plate = "ABC123",
                            phone = "1234567890",
                            registration_date = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(469),
                            username = "admin",
                            vehicle_line = "Corolla",
                            year_of_manufacture = "2020"
                        },
                        new
                        {
                            insurance_info_id = 2,
                            car_brand = "Honda",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(479),
                            customer_id = 2,
                            email = "user1@example.com",
                            frame_number = "FRAME002",
                            insurance_end_date = new DateTime(2025, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(477),
                            insurance_package = "Comprehensive Plan",
                            insurance_price = 700.00m,
                            insurance_start_date = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(477),
                            machine_number = "MACHINE002",
                            number_plate = "XYZ456",
                            phone = "1234567891",
                            registration_date = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(476),
                            username = "user1",
                            vehicle_line = "Civic",
                            year_of_manufacture = "2019"
                        },
                        new
                        {
                            insurance_info_id = 3,
                            car_brand = "Ford",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(483),
                            customer_id = 3,
                            email = "user2@example.com",
                            frame_number = "FRAME003",
                            insurance_end_date = new DateTime(2025, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(482),
                            insurance_package = "Premium Plan",
                            insurance_price = 900.00m,
                            insurance_start_date = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(482),
                            machine_number = "MACHINE003",
                            number_plate = "DEF789",
                            phone = "1234567892",
                            registration_date = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(481),
                            username = "user2",
                            vehicle_line = "Focus",
                            year_of_manufacture = "2021"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.InsuranceService", b =>
                {
                    b.Property<int>("service_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("service_id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_url")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("insurance_info_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("price")
                        .IsRequired()
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("service_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("service_id");

                    b.ToTable("insurance_services");

                    b.HasData(
                        new
                        {
                            service_id = 1,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(380),
                            description = "Basic vehicle insurance",
                            image_url = "customer-assets/uploads/product/moto.jpg",
                            insurance_info_id = 1,
                            is_active = true,
                            price = 50.00m,
                            service_name = "Moto Insurance"
                        },
                        new
                        {
                            service_id = 2,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(384),
                            description = "Premium vehicle insurance with more benefits",
                            image_url = "customer-assets/uploads/product/car.jpg",
                            insurance_info_id = 2,
                            is_active = true,
                            price = 50.00m,
                            service_name = "Car Insurance"
                        },
                        new
                        {
                            service_id = 3,
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(386),
                            description = "Comprehensive coverage for all types of damage",
                            image_url = "customer-assets/uploads/product/truck.jpg",
                            insurance_info_id = 3,
                            is_active = true,
                            price = 50.00m,
                            service_name = "Truck Insurance"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Notification", b =>
                {
                    b.Property<int>("notification_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("notification_id"));

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_read")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("message_content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("message_type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("sent_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("notification_id");

                    b.HasIndex("customer_id");

                    b.ToTable("notifications");

                    b.HasData(
                        new
                        {
                            notification_id = 1,
                            customer_id = 1,
                            is_read = false,
                            message_content = "Policy renewal reminder.",
                            message_type = "Reminder",
                            sent_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(296)
                        },
                        new
                        {
                            notification_id = 2,
                            customer_id = 2,
                            is_read = true,
                            message_content = "Your claim has been processed.",
                            message_type = "Claim Update",
                            sent_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(300)
                        },
                        new
                        {
                            notification_id = 3,
                            customer_id = 3,
                            is_read = false,
                            message_content = "Special discounts for renewals!",
                            message_type = "Promotion",
                            sent_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(302)
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Payment", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("payment_id"));

                    b.Property<string>("bill_number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int?>("insurance_info_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("payment_amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("payment_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("payment_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("transaction_id")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("payment_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("insurance_info_id");

                    b.ToTable("payments");

                    b.HasData(
                        new
                        {
                            payment_id = 1,
                            bill_number = "BILL001",
                            customer_id = 1,
                            insurance_info_id = 1,
                            payment_amount = 100.00m,
                            payment_date = new DateTime(2024, 11, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(196),
                            payment_status = "Completed",
                            transaction_id = "TXN001"
                        },
                        new
                        {
                            payment_id = 2,
                            bill_number = "BILL002",
                            customer_id = 2,
                            insurance_info_id = 2,
                            payment_amount = 200.00m,
                            payment_date = new DateTime(2024, 10, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(210),
                            payment_status = "Pending",
                            transaction_id = "TXN002"
                        },
                        new
                        {
                            payment_id = 3,
                            bill_number = "BILL003",
                            customer_id = 3,
                            insurance_info_id = 3,
                            payment_amount = 300.00m,
                            payment_date = new DateTime(2024, 9, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(213),
                            payment_status = "Failed",
                            transaction_id = "TXN003"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("full_name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone_number")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("user_logs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("user_id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            user_id = 1,
                            address = "123 Admin Street",
                            avatar = "admin_avatar.jpg",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(48),
                            email = "admin@gmail.com",
                            full_name = "Admin User",
                            password = "admin123",
                            phone_number = "1234567890",
                            role = "admin",
                            user_logs = "",
                            username = "admin"
                        },
                        new
                        {
                            user_id = 2,
                            address = "123 User Street",
                            avatar = "user1_avatar.jpg",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(51),
                            email = "vunnth2307024@gmail.com",
                            full_name = "User One",
                            password = "user123",
                            phone_number = "1234567891",
                            role = "customer",
                            user_logs = "",
                            username = "user1"
                        },
                        new
                        {
                            user_id = 3,
                            address = "123 Another Street",
                            avatar = "user2_avatar.jpg",
                            created_at = new DateTime(2024, 12, 22, 19, 6, 21, 859, DateTimeKind.Local).AddTicks(53),
                            email = "user2@example.com",
                            full_name = "User Two",
                            password = "user456",
                            phone_number = "1234567892",
                            role = "customer",
                            user_logs = "",
                            username = "user2"
                        });
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Claim", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Comment", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarInsuranceManage.Models.Comment", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("parent_comment_id");

                    b.Navigation("Customer");

                    b.Navigation("ParentComment");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Contact", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Customer", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.CustomerSupportRequest", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarInsuranceManage.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("resolved_by");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.History", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.InsuranceInfo", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Notification", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Payment", b =>
                {
                    b.HasOne("CarInsuranceManage.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarInsuranceManage.Models.InsuranceInfo", "InsuranceInfo")
                        .WithMany()
                        .HasForeignKey("insurance_info_id");

                    b.Navigation("Customer");

                    b.Navigation("InsuranceInfo");
                });

            modelBuilder.Entity("CarInsuranceManage.Models.Comment", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
